#!/usr/bin/env bash

depends_on () {
  DEPENDENCY="$1"
  LIBRARY="$2"

  command -v "$1" >/dev/null 2>&1 || {
    if [ ! -z "$LIBRARY" ]; then
      LIBRARY_MESSAGE="This is usually packaged as \"$LIBRARY\"."
    fi

    echo "Dependency \"$DEPENDENCY\" not found. $LIBRARY_MESSAGE" >&2;
    exit 1;
  }
}

help () {
  depends_on cat coreutils

  cat << END
  Usage:
  $0
  $0 [yesterday|today|tomorrow]

  Options:
  -h --help         Show this screen
END
}

get_base_dir () {
  depends_on dirname coreutils
  DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/..

  echo "$DIR"
}

# get_calendar_date $STRING_DATE
get_calendar_date () {
  depends_on gdate coreutils

  STRING_DATE="$@"     # concat args to a string
  PATTERN="%Y-%m-%d"   # use ISO 8601 date pattern
  CALENDAR_DATE=$(gdate -u +"$PATTERN" --date "$STRING_DATE")

  echo "$CALENDAR_DATE"
}

# get_entry_path $CALENDAR_DATE
get_entry_path () {
  CALENDAR_DATE="$1"
  DIR=$(get_base_dir)
  ENTRY_PATH="$DIR/entries/$CALENDAR_DATE.md"

  echo "$ENTRY_PATH"
}

# get_config_path $CONFIG_FILE
get_config_path () {
  CONFIG_FILE=$1
  DIR=$(get_base_dir)
  CONFIG_PATH="$DIR/config/$CONFIG_FILE"

  echo "$CONFIG_PATH"
}

set_vim_paths () {
  ENTRY_PATH="$1"
  TEMPLATE_PATH="$2"
  if [ ! -f "$ENTRY_PATH" ]; then
    VIM_CMD=":r $TEMPLATE_PATH"
  fi

  exec vim -c "$VIM_CMD" "$ENTRY_PATH"
}

case "$1" in
  -h | --help)
    help
    exit 0
  ;;
  *)
    STRING_DATE="${@:1}"
    CALENDAR_DATE=$(get_calendar_date "$STRING_DATE")
    ENTRY_PATH=$(get_entry_path "$CALENDAR_DATE")
    TEMPLATE_PATH=$(get_config_path "template.md")
    set_vim_paths "$ENTRY_PATH" "$TEMPLATE_PATH"
  ;;
esac

